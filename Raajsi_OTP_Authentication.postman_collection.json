{
  "info": {
    "name": "Raajsi - OTP Authentication",
    "_postman_id": "raajsi-otp-auth-v1",
    "description": "## Phone-based OTP Authentication\n\n### Features:\n- Send OTP to phone number via 2Factor.in\n- Verify OTP and receive JWT token\n- Resend OTP with rate limiting\n- Automatic user creation on first login\n\n### Setup Instructions:\n1. Import this collection into Postman\n2. Update variables if needed (baseUrl, phoneNumber)\n3. Ensure backend server is running\n4. Test 'Send OTP' first\n5. Copy OTP from response (dev mode)\n6. Paste OTP and test 'Verify OTP'\n7. Token will be auto-saved to collection variable\n\n### Flow:\n```\nSend OTP ‚Üí Receive SMS ‚Üí Enter OTP ‚Üí Verify ‚Üí Get Token ‚Üí Use for Protected Routes\n```\n\n### Backend Requirements:\n- Backend running on port 5000 (or update baseUrl)\n- TWOFACTOR_API_KEY configured in .env\n- MongoDB connected",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "1. Send OTP",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "// Test: Check response status",
              "pm.test('Status code is 200', function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "// Test: Response has required fields",
              "pm.test('Response contains sessionId', function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('sessionId');",
              "});",
              "",
              "// Auto-save sessionId and OTP to collection variables",
              "if (pm.response.code === 200) {",
              "    var jsonData = pm.response.json();",
              "    pm.collectionVariables.set('sessionId', jsonData.sessionId);",
              "    ",
              "    // In dev mode, OTP is included in response",
              "    if (jsonData.otp) {",
              "        pm.collectionVariables.set('otp', jsonData.otp);",
              "        console.log('‚úÖ OTP auto-saved:', jsonData.otp);",
              "    }",
              "    ",
              "    console.log('‚úÖ SessionId saved:', jsonData.sessionId);",
              "    console.log('üì± OTP sent to:', pm.collectionVariables.get('phoneNumber'));",
              "}"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"phoneNumber\": \"{{phoneNumber}}\"\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseUrl}}/auth/send-otp",
          "host": ["{{baseUrl}}"],
          "path": ["auth", "send-otp"]
        },
        "description": "### Send OTP to Phone Number\n\nSends a 6-digit OTP to the specified phone number via 2Factor SMS service.\n\n**Request Body:**\n```json\n{\n  \"phoneNumber\": \"+919999999999\"\n}\n```\n\n**Phone Number Formats Supported:**\n- `+919999999999` (with country code)\n- `919999999999` (without +)\n- `9999999999` (10 digits, assumes India +91)\n\n**Success Response (200):**\n```json\n{\n  \"message\": \"OTP sent successfully\",\n  \"sessionId\": \"ab88279e-0105-415f-912e-2f24162b8cbb\",\n  \"expiresIn\": 600,\n  \"otp\": \"123456\"  // Only in development mode\n}\n```\n\n**Rate Limiting:**\n- 60 seconds cooldown between requests\n- Maximum 5 attempts per hour per phone number\n\n**Common Errors:**\n- `400` - Phone number is required\n- `429` - Rate limit exceeded (cooldown or max attempts)\n- `500` - 2Factor service error or API key not configured"
      },
      "response": [
        {
          "name": "Success - OTP Sent",
          "originalRequest": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"phoneNumber\": \"+919999999999\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/auth/send-otp",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "send-otp"]
            }
          },
          "status": "OK",
          "code": 200,
          "_postman_previewlanguage": "json",
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "cookie": [],
          "body": "{\n  \"message\": \"OTP sent successfully\",\n  \"sessionId\": \"ab88279e-0105-415f-912e-2f24162b8cbb\",\n  \"expiresIn\": 600,\n  \"otp\": \"123456\"\n}"
        },
        {
          "name": "Error - Rate Limited (Cooldown)",
          "originalRequest": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"phoneNumber\": \"+919999999999\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/auth/send-otp",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "send-otp"]
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "_postman_previewlanguage": "json",
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "cookie": [],
          "body": "{\n  \"message\": \"Please wait 45 seconds before requesting another OTP\"\n}"
        },
        {
          "name": "Error - Max Attempts Exceeded",
          "originalRequest": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"phoneNumber\": \"+919999999999\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/auth/send-otp",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "send-otp"]
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "_postman_previewlanguage": "json",
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "cookie": [],
          "body": "{\n  \"message\": \"Maximum OTP attempts exceeded. Please try again after 1 hour.\"\n}"
        }
      ]
    },
    {
      "name": "2. Verify OTP",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "// Test: Check response status",
              "pm.test('Status code is 200', function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "// Test: Response contains user and token",
              "pm.test('Response contains user object', function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('user');",
              "    pm.expect(jsonData.user).to.have.property('token');",
              "});",
              "",
              "// Auto-save token to collection variable",
              "if (pm.response.code === 200) {",
              "    var jsonData = pm.response.json();",
              "    var token = jsonData.user.token;",
              "    pm.collectionVariables.set('token', token);",
              "    ",
              "    console.log('‚úÖ Token saved to collection variable');",
              "    console.log('üë§ User ID:', jsonData.user._id);",
              "    console.log('üì± Phone:', jsonData.user.phoneNumber);",
              "    console.log('‚úîÔ∏è Verified:', jsonData.user.isPhoneVerified);",
              "    console.log('üìù Onboarded:', jsonData.user.isOnboarded);",
              "    ",
              "    if (!jsonData.user.isOnboarded) {",
              "        console.log('‚ö†Ô∏è User needs to complete profile');",
              "    }",
              "}"
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              "// Pre-request: Use OTP from collection variable if available",
              "var savedOtp = pm.collectionVariables.get('otp');",
              "if (savedOtp) {",
              "    console.log('Using saved OTP:', savedOtp);",
              "}"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"phoneNumber\": \"{{phoneNumber}}\",\n  \"otp\": \"{{otp}}\"\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseUrl}}/auth/verify-otp",
          "host": ["{{baseUrl}}"],
          "path": ["auth", "verify-otp"]
        },
        "description": "### Verify OTP and Get JWT Token\n\nVerifies the OTP entered by user and returns a JWT token for authentication.\n\n**Request Body:**\n```json\n{\n  \"phoneNumber\": \"+919999999999\",\n  \"otp\": \"123456\"\n}\n```\n\n**Success Response - New User (200):**\n```json\n{\n  \"user\": {\n    \"_id\": \"60d5ec49f1b2c72b8c8e4a1b\",\n    \"name\": null,\n    \"email\": null,\n    \"phoneNumber\": \"+919999999999\",\n    \"profileImageUrl\": \"https://...\",\n    \"cart\": \"60d5ec49f1b2c72b8c8e4a1c\",\n    \"shippingAddress\": null,\n    \"accountType\": \"user\",\n    \"isOnboarded\": false,\n    \"isPhoneVerified\": true,\n    \"coupon_applied\": [],\n    \"isBlocked\": false,\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\"\n  },\n  \"message\": \"Login successful. Please complete your profile.\"\n}\n```\n\n**Success Response - Existing User (200):**\n```json\n{\n  \"user\": {\n    \"_id\": \"60d5ec49f1b2c72b8c8e4a1b\",\n    \"name\": \"John Doe\",\n    \"email\": \"john@example.com\",\n    \"phoneNumber\": \"+919999999999\",\n    \"isOnboarded\": true,\n    \"isPhoneVerified\": true,\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\"\n  },\n  \"message\": \"Login successful\"\n}\n```\n\n**What Happens:**\n- New users: Creates account + cart, returns token\n- Existing users: Returns token\n- Token is valid for 7 days\n- Use token in Authorization header: `Bearer <token>`\n\n**Common Errors:**\n- `400` - Missing phone number or OTP\n- `400` - No OTP session found (need to send OTP first)\n- `400` - OTP expired (valid for 10 minutes)\n- `400` - Invalid OTP\n- `403` - User account blocked by admin"
      },
      "response": [
        {
          "name": "Success - New User Created",
          "originalRequest": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"phoneNumber\": \"+919999999999\",\n  \"otp\": \"123456\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/auth/verify-otp",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "verify-otp"]
            }
          },
          "status": "OK",
          "code": 200,
          "_postman_previewlanguage": "json",
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "cookie": [],
          "body": "{\n  \"user\": {\n    \"_id\": \"671269a8b5e4c12345678901\",\n    \"name\": null,\n    \"email\": null,\n    \"phoneNumber\": \"+919999999999\",\n    \"profileImageUrl\": \"https://res.cloudinary.com/piyush27/image/upload/v1632215188/story/Group_113_rufkkn.png\",\n    \"cart\": \"671269a8b5e4c12345678902\",\n    \"shippingAddress\": null,\n    \"accountType\": \"user\",\n    \"isOnboarded\": false,\n    \"isPhoneVerified\": true,\n    \"coupon_applied\": [],\n    \"isBlocked\": false,\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NzEyNjlhOGI1ZTRjMTIzNDU2Nzg5MDEiLCJyb2xlIjoidXNlciIsImlhdCI6MTcyOTEyMDIzOCwiZXhwIjoxNzI5NzI1MDM4fQ.Xp5_ZYfVQs8eJmN9pL4KjH6Rt7mW3vB1nC8dU0eG9fY\"\n  },\n  \"message\": \"Login successful. Please complete your profile.\"\n}"
        },
        {
          "name": "Success - Existing User Login",
          "originalRequest": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"phoneNumber\": \"+919999999999\",\n  \"otp\": \"123456\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/auth/verify-otp",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "verify-otp"]
            }
          },
          "status": "OK",
          "code": 200,
          "_postman_previewlanguage": "json",
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "cookie": [],
          "body": "{\n  \"user\": {\n    \"_id\": \"671269a8b5e4c12345678901\",\n    \"name\": \"John Doe\",\n    \"email\": \"john@example.com\",\n    \"phoneNumber\": \"+919999999999\",\n    \"profileImageUrl\": \"https://example.com/profile.jpg\",\n    \"cart\": \"671269a8b5e4c12345678902\",\n    \"shippingAddress\": {\n      \"firstName\": \"John\",\n      \"lastName\": \"Doe\",\n      \"street\": \"123 Main St\",\n      \"city\": \"Mumbai\",\n      \"state\": \"Maharashtra\",\n      \"zip\": \"400001\",\n      \"phoneNumber\": \"+919999999999\"\n    },\n    \"accountType\": \"user\",\n    \"isOnboarded\": true,\n    \"isPhoneVerified\": true,\n    \"coupon_applied\": [],\n    \"isBlocked\": false,\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NzEyNjlhOGI1ZTRjMTIzNDU2Nzg5MDEiLCJyb2xlIjoidXNlciIsImlhdCI6MTcyOTEyMDIzOCwiZXhwIjoxNzI5NzI1MDM4fQ.Xp5_ZYfVQs8eJmN9pL4KjH6Rt7mW3vB1nC8dU0eG9fY\"\n  },\n  \"message\": \"Login successful\"\n}"
        },
        {
          "name": "Error - Invalid OTP",
          "originalRequest": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"phoneNumber\": \"+919999999999\",\n  \"otp\": \"000000\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/auth/verify-otp",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "verify-otp"]
            }
          },
          "status": "Bad Request",
          "code": 400,
          "_postman_previewlanguage": "json",
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "cookie": [],
          "body": "{\n  \"message\": \"Invalid OTP\"\n}"
        },
        {
          "name": "Error - OTP Expired",
          "originalRequest": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"phoneNumber\": \"+919999999999\",\n  \"otp\": \"123456\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/auth/verify-otp",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "verify-otp"]
            }
          },
          "status": "Bad Request",
          "code": 400,
          "_postman_previewlanguage": "json",
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "cookie": [],
          "body": "{\n  \"message\": \"OTP has expired. Please request a new OTP.\"\n}"
        },
        {
          "name": "Error - User Blocked",
          "originalRequest": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"phoneNumber\": \"+919999999999\",\n  \"otp\": \"123456\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/auth/verify-otp",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "verify-otp"]
            }
          },
          "status": "Forbidden",
          "code": 403,
          "_postman_previewlanguage": "json",
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "cookie": [],
          "body": "{\n  \"message\": \"User account is blocked by admin\"\n}"
        }
      ]
    },
    {
      "name": "3. Resend OTP",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "// Test: Check response status",
              "pm.test('Status code is 200', function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "// Auto-save new sessionId and OTP",
              "if (pm.response.code === 200) {",
              "    var jsonData = pm.response.json();",
              "    pm.collectionVariables.set('sessionId', jsonData.sessionId);",
              "    ",
              "    if (jsonData.otp) {",
              "        pm.collectionVariables.set('otp', jsonData.otp);",
              "        console.log('‚úÖ New OTP saved:', jsonData.otp);",
              "    }",
              "}"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"phoneNumber\": \"{{phoneNumber}}\"\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseUrl}}/auth/resend-otp",
          "host": ["{{baseUrl}}"],
          "path": ["auth", "resend-otp"]
        },
        "description": "### Resend OTP to Phone Number\n\nResends a new OTP to the same phone number. Subject to the same rate limiting rules as Send OTP.\n\n**Request Body:**\n```json\n{\n  \"phoneNumber\": \"+919999999999\"\n}\n```\n\n**Response:** Same as Send OTP endpoint\n\n**Rate Limiting:**\n- Must wait 60 seconds from last OTP request\n- Maximum 5 OTP requests per hour"
      },
      "response": []
    },
    {
      "name": "4. Test Protected Route (Get Cart)",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 200 or 401', function () {",
              "    pm.expect(pm.response.code).to.be.oneOf([200, 401]);",
              "});",
              "",
              "if (pm.response.code === 401) {",
              "    console.log('‚ùå Unauthorized - Token missing or invalid');",
              "    console.log('üí° First complete OTP verification to get token');",
              "} else if (pm.response.code === 200) {",
              "    console.log('‚úÖ Authorized - Token is valid');",
              "}"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{token}}",
            "type": "text"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/user/cart",
          "host": ["{{baseUrl}}"],
          "path": ["user", "cart"]
        },
        "description": "### Test Protected Route\n\nThis is an example of using the JWT token received from OTP verification to access protected routes.\n\n**Headers Required:**\n```\nAuthorization: Bearer <token>\n```\n\n**How It Works:**\n1. Complete OTP verification first\n2. Token is auto-saved to collection variable\n3. This request uses {{token}} variable in Authorization header\n4. Backend validates token and returns user's cart\n\n**Expected Response (200):**\n```json\n{\n  \"cart\": {\n    \"_id\": \"...\",\n    \"userId\": \"...\",\n    \"products\": []\n  }\n}\n```\n\n**If token is invalid or missing (401):**\n```json\n{\n  \"message\": \"Unauthorized access.\"\n}\n```"
      },
      "response": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Global pre-request script",
          "console.log('üöÄ Request:', pm.info.requestName);",
          "console.log('üìç URL:', pm.request.url.toString());"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Global test script for all requests",
          "pm.test('Response time is acceptable', function () {",
          "    pm.expect(pm.response.responseTime).to.be.below(10000);",
          "});",
          "",
          "if (pm.response.headers.has('Content-Type')) {",
          "    pm.test('Content-Type is JSON', function () {",
          "        pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');",
          "    });",
          "}"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:5000",
      "type": "default"
    },
    {
      "key": "phoneNumber",
      "value": "+919999999999",
      "type": "default"
    },
    {
      "key": "otp",
      "value": "",
      "type": "default"
    },
    {
      "key": "token",
      "value": "",
      "type": "default"
    },
    {
      "key": "sessionId",
      "value": "",
      "type": "default"
    }
  ]
}
